#!/bin/bash

#Flags processing
flag=0
originPath=""
destinationPath=""
filesSynced=0

red=`tput setaf 1`
green=`tput setaf 2`
reset=`tput sgr0`

#Number of arguments should be greater than 1
#At least 2 paths
if (( $# < 2 )); then
echo "Call script with correct number of arguments."
exit 25
fi

#If passed 2 params and 1 of them is key
#Still not enough arguments
if [ "$1" = "-v" ] && [ $# -eq 2 ]; then
echo "Not enough arguments."
exit 25
fi

#If passed verbose flag
if [ "$1" = "-v" ] && [ $# -ge 3 ]; then
flag=1
fi

if [ $flag -eq 1 ]; then
echo "Flag is setted up."
originPath="$2"
destinationPath="$3"
else
originPath="$1"
destinationPath="$2"
fi

if [ $flag -eq 1 ]; then
echo "Present of -v flag: $flag"
echo "Origin path(1): ${green}$originPath${reset}"
echo "Destination path(2): ${green}$destinationPath${reset}"
fi

function syncData {
local lOriginPath=$1
local lDestinationPath=$2

if [ $flag -eq 1 ]; then
echo "New origin: ${green}$lOriginPath${reset}"
echo "New destination: ${green}$lDestinationPath${reset}"
fi

for file in $lOriginPath/*; do
if [ -f $file ]; then
	local firstFile=$(date -r $file +"%s")
	local secondFile=$(date -r $lDestinationPath/$(basename $file) +"%s")
	echo "Seconds $firstFile"
	echo "Seconds2 $secondFile"
        if [ $firstFile -gt $secondFile ]; then
		if [ $flag -eq 1 ]; then
			echo "Copying: $file"
                	echo "To: $lDestinationPath/$(basename $file)"
		fi
                cp $file $lDestinationPath/
                filesSynced=$((filesSynced+1))
	elif [ $firstFile -lt $secondFile ]; then
		read -n1 -p "Newer ${red}$(basename $file)${reset} in destination. Keep(0) or rewrite older version(1)? "
		echo ""
		if [ $REPLY -ge 1 ]; then
			cp $file $lDestinationPath/
			filesSynced=$((filesSynced+1))
		fi
        fi
elif [ -d $file ]; then
	if [ $flag -eq 1 ]; then
        	echo "Directory found: $file"
	fi
	if [ -e $lDestinationPath/$(basename $file) ] && [ -d $lDestinationPath/$(basename $file) ]; then
		if [ $flag -eq 1 ]; then
		echo "Directory in destination exists. Start sync."
		fi
	else
		if [ $flag -eq 1 ]; then
		echo "Creating directory in destination."
		fi
		mkdir $lDestinationPath/$(basename $file)
	fi
	syncData $file $lDestinationPath/$(basename $file)
fi
done
}

syncData $originPath $destinationPath

if [ $flag -eq 1 ]; then
echo "Files synced: ${green}$filesSynced${reset}."
fi
